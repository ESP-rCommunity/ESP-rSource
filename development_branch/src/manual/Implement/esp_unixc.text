.TL
Relationship between Esp-r and Unix/Linux
.AU
ESRU
.LP
Traditionally ESP-r has run on Unix/Linux systems. Unix and 
Linux offer useful utilities, considerable security and robustness 
and they allow several Esp-r modules to run concurrently.
Unix/Linux provides facilities for moving around in its folder structure, 
manipulating files and folders,
searching for text, archiving work, transferring it to
colleagues and the like.  Other than the facilities
described in the document, there is little else a normal
user of Esp-r needs to know. Those who maintain
the system and work with the source code will need additional
skills.
.IP "a)" 3
Unix/Linux is multi-user and multi-tasking. Typically, machines
are setup with separate users for those who manage the software
and those who use it. The inbuilt security ensures the integrity
of esp-r modules and databases as well as project files. 
One compute server can be used by several remote users.
.IP "b)" 3
You will have a login account and an
area to work in which is protected
from the chaos of other users.  
.IP "c)" 3
There are both command line and graphical
tools available to you. The command line tools should work
on just about any machine. Different operating system
vendors provide different graphic tools.
.IP "d)" 3
Unix/Linux uses a hierarchical directory structure
beginning at "/" (equivalent to c:\ on a PC) which is the root directory and
everything else hangs off of that. Your area might
be in /home/jackson (if you name is jackson). Esp-r
lives in /usr/esru/esp-r. There is no A:B:C:D:E:
.IP "e)" 3
Commands tend to be terse - "cp" for copy, "mv" for move 
etc. Each has a dozen options
so that copies can be recursive, file listings can be
brief, extensive, sorted by some key. There is an
on-line manual (either text or graphics based) for 
all commands.
.LP
The following discussion will help you gain a basic understanding
prior to the ESP-r course and serve as a reference document during
the course. Items in <> would be replaced by your own text. Items
in () are comments.
.SH
Moving around:
.LP
Given the following directories and files:
.nf

\fB /				(root)
 /home/jackson			(the home of jackson)
              /project_a	(folder for a project)
              /memos		(folder for memos)
                    /fax_121196_gary, fax_1106_mark, fax

              /email		(folder for emails)

 /usr/esru			(the home of esp-r) 
          /esp-r
                /bin		(where esp-r executables live)
                    /bps, prj res	(esp-r modules)
                /training	(where training models live)
                         /simple
                                /cfg
                                    /bld_simple.cfg
\fR
.fi
.LP
When you log in you will be in your home folder.
If you get confused about where you happen to be
at any time then give the command
.nf

  \fBpwd\fR
.fi
.LP
(print working folder) which will return information like: /home/jackson/memos
.LP
To move around use the command "cd  <folder_name>" to 
go there. Ensure there is a space after the command.
To move to the set of folders used by esp-r use the command
.nf

  \fBcd /usr/esru/esp-r\fR
.fi
.LP
The <folder_name> can be relative -
in which case ".." means go up a level. To move
to the folder above give the command
.nf

  \fBcd ..\fR
.fi
.LP
The <folder_name> can be absolute -
so to go into the folder of esp-r executables
(from your current location) to see how big they 
are you can use the command
.nf

  \fBcd /usr/esru/esp-r/bin\fR
.fi
.LP
If no folder_name is given then you are returned to
your home folder:
.nf

  \fBcd \fR
.fi
.SH
Copying files:
.LP
In your home folder structure, say you wanted
to copy a file (say fax_121196_gary) for use as the basis for a new fax.
.nf

  \fBcp fax_121179_gary fax_050297\fR

the syntax is cp  <soure>  <destination>
.fi
.LP
If, while in your home folder you want to
copy a model file in /usr/esru/esp-r/training/simple
to the memos folder for printing or editing then
.nf

  \fBcp  /usr/esru/esp-r/training/simple/cfg/bld_simple.cfg  .\fR
.fi
.LP
in this case the "." is short for "where I am now". Because
no name was given in the destination the copied file
will have the same name as the source. If you wanted
to change the name as you copied it you use the command:
.nf

  \fBcp  /usr/esru/esp-r/training/simple/cfg/bld_simple.cfg  ralph.cfg\fR
.fi
.LP
You could also change the name by the command:
.nf

  \fBmv  bld_simple.cfg  ralph.cfg\fR

where the syntax is mv  <source>  <destination>
.fi
.SH
Contents of files:
.LP
To view the contents of a text file, one option is to use the command:
.nf

  \fBmore  bld_simple.cfg\fR

where the syntax is more  <file name>
.fi
.SH
Creating directories:
.LP
In the above folder structure, say you wanted
to begin a new project. There is already a folder
called project_a and if you want to create a project_b
at the same level give the following commands:
.nf

  \fBcd  /home/jackson
  mkdir  project_b\fR
.fi
.LP
you can then move into this new folder via the command:
.nf

  \fBcd  project_b\fR
.fi
.SH
Finding out what is in a folder:
.LP
The normal way to find out the contents of a folder 
is to use the "ls" command.  For example a listing
of the contents of "memos" is
.nf

ls  memos
Beattie                 home_off_cover2         roosvlt_280196
bepac_lmia              home_off_cover3         roosvlt_280196.ps
home_off_cover          pcs210394
lambda: jon/textfR 
.fi
.LP
Unless you know what these names represent you might want to
find out more. A long listing is:
.nf

ls -l memos
total 44
-rw-r--r--  1 jon          1990 May 24  1993 Beattie
-rw-r--r--  1 jon          1665 May 30  1995 bepac_lmia
-rw-r--r--  1 jon          3102 Mar 12  1993 home_off_cover
-rw-r--r--  1 jon          4078 Feb  5  1994 home_off_cover2
-rw-r--r--  1 jon          4163 Mar 27  1995 home_off_cover3
-rw-r--r--  1 jon          2133 Nov 30  1994 pcs210394
-rw-r--r--  1 jon          1678 Oct 28 14:04 roosvlt_280196
-rw-r--r--  1 jon         22035 Oct 28 14:05 roosvlt_280196.ps\fR
.fi
.LP
The "-rw-r--r--" represents the permissions and file types. In this
case the user has read & write permission and the "group" of the
user and "others" can read these files but they cannot modify
them. The "-" in the first column denotes a file. The owner
of the file comes next and then the size of the file, a date
stamp and then the name.
.LP
There are a number of options with ls. In fact the possible
options are:
.nf

\fBNAME
     ls - list the contents of a folder

SYNOPSIS
     ls [ -aAcCdfFgilLqrRstu1 ] filename ...

.fi
.LP
and the MAN pages, or in Linux the Info pages (the on-line 
manual) will tell you all about
it in more detail than your grandmother can remember 1942.
You can have this by the command:
.nf

  \fBman ls\fR
.fi
.SH
Removing files:
.LP
Sometimes you want to get rid of a file. Unlike other operating
systems, when you do this you REALLY delete it. The syntax is:
.nf

  \fBrm  <file_name>\fR
.fi
.LP
Remove has lots of powerful options which experts occassionally
use. The operating system also provides facilities for archiving
your work (see next discussion).
.SH
Making backups of files and/or directories:
.LP
Anyone who has lost half a weeks work by a disk crash or one 
of "rm's" more powerful options has an interest in archiving
their work. Unix/Linux provides a simple way to save your projects 
similar to how one might use zip to create archives on a PC. It is called
"tar". Tar creates one file (or writes to a tape drive) out of the contents
of many files or folders and sub-folders.  Say
I wanted to archive the memos folder I would give the
following command:
.nf

\fBlambda: jon/text% tar  cvf  memos_030297.tar  memos
a memos/ 0 tape blocks
a memos/pcs210394 5 tape blocks
a memos/Beattie 4 tape blocks
a memos/home_off_cover 7 tape blocks
a memos/home_off_cover2 8 tape blocks
a memos/roosvlt_280199 4 tape blocks
a memos/home_off_cover3 9 tape blocks
a memos/bepac_lmia 4 tape blocks
a memos/roosvlt_280199.ps 44 tape blocks
lambda: jon/text% \fR
.fi
.LP
This says create verbosely the file memos_030297.tar with
the contents of the folder memos. The resulting file:
.nf

\fB  ls -l memos_030297.tar
-rw-r--r--  1 jon         51200 Feb  4 19:16 memos_030297.tar\fR
.fi
.LP
To find out what it contains I give the command:
.nf

\fBlambda: jon/text% tar  tvf  memos_030297.tar
drwxr-xr-x1002/10       0 Oct 28 14:05 1996 memos/
-rw-r--r--1002/10    2133 Nov 30 11:14 1994 memos/pcs210394
-rw-r--r--1002/10    1990 May 24 11:57 1993 memos/Beattie
-rw-r--r--1002/10    3102 Mar 12 14:10 1993 memos/home_off_cover
-rw-r--r--1002/10    4078 Feb  5 14:56 1994 memos/home_off_cover2
-rw-r--r--1002/10    1678 Oct 28 14:04 1999 memos/roosvlt_280199
-rw-r--r--1002/10    4163 Mar 27 19:26 1995 memos/home_off_cover3
-rw-r--r--1002/10    1665 May 30 09:39 1995 memos/bepac_lmia
-rw-r--r--1002/10   22035 Oct 28 14:05 1999 memos/roosvlt_280199.pfR
.nf
.LP
which says tell me (verbosely) the contents of memos_030297.tar.
.LP
Perhaps I managed to corrupt the file roosvlt_280196.ps. I can
recover it via the command:
.nf

\fB tar  xvf  memos_030297.tar  memos/roosvlt_280196.ps\fR
.fi
.LP
which say extract (verbosely) from the archive memos_030297.tar the
specific file memos/roosvlt_280196.ps.
.LP
This tar archive, being a single file is easy to send to others. A typical
use is to create a "tar" file of a project, have someone halfway around
the world pick it up and then expand the project to recreate exactly
the same structure of project that you have.
.SH
Compressing files:
.LP
Sometimes you have work or simulation results which you will not
be needing for a few days. You can compress files with the
command compress (in Unix) and gzip (in Linux):
.nf

  \fBcompress  <file_name>\fR
  \fBgzip  <file_name>\fR
.fi
.LP
which adds a ".Z" or ".gz" to the end of the file and makes it 20-80%
smaller. To reverse the process use the command:
.nf

  \fBuncompress  <compressed_file_name>\fR
  \fBgzip  -d  <compressed_file_name>\fR
.fi
.LP
For example the "tar" file of the memos folder can be compressed:
.nf

\fBlambda: jon/text% compress memos_030297.tar
lambda: jon/text% ls -l memos_030297.tar.Z
-rw-r--r--  1 jon         21290 Feb  4 19:16 memos_030297.tar.Z\fR
.fi


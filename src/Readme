===========================================================

                   ESP-r

A multi-domain building performance simulation program

Contents
--------

   1. Acknowledgments
   2. License
   3. Obtaining ESP-r
   4. System requirements
   5. Optional features
   6. Installation
   7. Post-installation configuration
   8. Documentation
   9. Validation
  10. Release testing 
  11. Support

===========================================================
1. ACKNOWLEDGMENTS

ESP-r is developed and distributed by the Energy Systems
Research Unit (ESRU) of the University of Strathclyde and
Natural Resources Canada (NRCan), in collaboration with
researchers and practitioners around the world.

Send inquiries to:

   Energy Systems Research Unit (ESRU)
   University of Strathclyde,
   James Weir Building
   75 Montrose Street
   Glasgow UK
   G1 1XJ

   http://www.esru.strath.ac.uk/
   esru@strath.ac.uk

ESP-r is also supported through a community mailing list.
To subscribe to the list, visit:

   http://lists.strath.ac.uk/mailman/listinfo/esp-r

===========================================================
2. LICENSE

ESP-r is free software.  You can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation,
either version two of the License, or (at your option)
any later version.

ESP-r is distributed in the hope that it will be useful
but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public
License along with ESP-r. If not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330,
Boston, MA 02111-1307 USA.

===========================================================
3. OBTAINING ESP-r.

ESP-r is distributed in two forms:
   i) precompiled binaries, and
  ii) version-controlled source code.

Using the precompiled binaries is the easiest way to get
ESP-r up and running, but you'll need the source code if
you wish to modify ESP-r and contribute your changes to
the community.

Precompiled binaries
---------------------
Precompiled binaries for Linux, Cygwin, Mac OSX and
Microsoft Windows are available at:

   ftp://ftp.strath.ac.uk/Esru_public/


Version-controlled source code
------------------------------
The ESP-r source code is stored on a publicly-accessible
Subversion repository, called 'ESP-r Central'. 

You can learn more about accessing the ESP-r subversion
repository here:

   http://www.esru.strath.ac.uk/Programs/ESP-r_central.htm

Source code for the current release can be downloaded using
the subversion command:

   svn checkout https://esp-r.net/espr/esp-r/trunk/

Source code for the latest 'development' version of ESP-r
can be downloaded using the subversion command

   svn checkout https://esp-r.net/espr/esp-r/branches/development_branch

Should you wish to contribute improvements to the archive,
you'll also need a developer's account. Contact the ESP-r
archivist (Ian Beausoleil-Morrison,
Ian.Beausoleil-Morrison@nrcan.gc.ca) to arrange one.


===========================================================
4. SYSTEM REQUIREMENTS

ESP-r has been installed Solaris, Linux, Cygwin, MinGW and
MAC OS X systems, using a variety of compiler and graphics
library combinations. Some of these configurations have been
thoroughly tested and are regarded as 'stable', while
others remain in beta testing.

While ESP-r has been built on all of the supported platforms
and configurations, it is most routinely used on Linux. 
Installation on common Linux distributions (including
Mandrake, Redhat/Fedora and Gentoo) has proven robust, and 
you can use it with confidence on these systems. 

ESP-r is used less often on Solaris, Cygwin, MinGW and OS X. 
systems. These systems are not be available to some ESP-r 
developers, and some (such as MinGW) provide no standard 
environment on which ESP-r developers can rely to ensure the 
software functions correctly. While every effort is made to 
assure the quality of ESP-r on these platforms, it may not 
perform as expected on a particular system. Should you wish 
to use ESP-r on a non-Linux platform, please review Section 
10: "QUALITY ASSURANCE AND RELEASE TESTING", below. There,
you will find an up-to-date description of the status of ESP-r 
on each platform.

Architectures
-------------
ESP-r is presently only supported on 32 bit systems.
Installations on MinGW and OS X are regarded as 'beta'.

                      +-------+------+------+------+------+
                      |Solaris|Linux |Cygwin|MinGW | OS X |
+---------------------+-------+------+------+------+------+
| 32-bit              |  S    |  S   |  S   |  B   |  S   |
| 64-bit              |  X    |  X   |  X   |  X   |  X   |
+---------------------+-------+------+------+------+------+
 S = Stable
 B = Beta testing
 X = Not supported
 - = Not applicable 

Compilers
---------
Compilation of ESP-r is presently only supported with
the GNU GCC 3.X compiler set (gcc, g++ and g77) the Sun
compiler set (cc, CC, f90). ESP-r also builds with the GNU
GCC 4.1+ compiler set (gcc, g++ and gFortran) on Linux,
but unexplained numerical differences have been observed
between GCC 3 and GCC4 builds. Until these differences
are resolved, use of GCC4 builds are recommended only for
testing purposes.

                      +-------+------+------+------+------+
                      |Solaris|Linux |Cygwin|MinGW | OS X |
+---------------------+-------+------+------+------+------+
| Sun cc  / f90       |  S    |  -   |  -   |  -   |  -   |
| gcc 3.X / g77       |  S    |  S   |  S   |  B   |  S   |
| gcc 4.X / gFrotran  |  X    |  B   |  X   |  X   |  X   |
+---------------------+-------+------+------+------+------+
 S = Stable
 B = Beta testing
 X = Not supported
 - = Not applicable

By installing the following packages, users of newer GCC
4.X-based linux distributions can build ESP-r using GCC 3:
  - compat-gcc-32
  - compat-gcc-32-c++
  - compat-gcc-32-g77
  - compat-libf2c-32

With these versions of gcc installed, invoke the Install
script using the --gcc32 option:
  
  $ ./Install --gcc32

Graphics libraries
------------------
Traditionally, ESP-r incorporated an X11-based graphical
interface and could also be built as a text-only shell
application. Work is presently underway to modernize the
ESP-r interface using the GTK interface, and GTK versions
of ESP-r can be installed on all platforms provided the
GTK libraries are available.  

                      +-------+------+------+------+------+
                      |Solaris|Linux |Cygwin|MinGW | OS X |
+---------------------+-------+------+------+------+------+
| X11                 |  S    |  S   |  S   |  -   |  S   |
| GTK                 |  B    |  B   |  B   |  B   |  B   |
| no graphics         |  S    |  S   |  S   |  B   |  S   |
+---------------------+-------+------+------+------+------+
 S = Stable
 B = Beta testing
 X = Not supported
 - = Not applicable

===========================================================
5. OPTIONAL FEATURES

XML & CSV output
----------------
By default, the ESP-r simulation engine (bps) writes out
binary results libraries that must be post-processed using
a separate tool (res). bps can also optionally export the
results directly into ASCII XML and comma-separated-value
formats, provided the GNU libxml2 library is available on
the system.

If the GNU libxslt library is also available, bps can be
configured to translate the XML result file into any user-
specified ASCII format. 

===========================================================
6. INSTALLATION

Installation of ESP-r is managed through the 'Install'
script, which is located in the 'src' directory. ESP-r
can be installed into any user-writable directory.

The Install script provides interactive prompts to guide
you through the ESP-r installation, and also understands
a number of command line arguments. For more information,
run:

  $ ./Install --help


System-wide installations:
--------------------------

  1. Create a '/usr/esru' folder.

  2. As superuser, run the command:

          $ ./Install -d /usr/esru


Local installations
-------------------

  1. Run the command:

          $ ./Install -d <path/to/esp-r>

     Where <path/to/esp-r> describes the desired
     installation directory. For instance,
     './Install -d ~/my_esp-r' will install ESP-r
     in a directory called my_esp-r, in the user's
     home folder.

After installing ESP-r, be sure to update your PATH
environment variable as described below.

===========================================================
7. POST INSTALLATION CONFIGURATION

On most Linux and Cygwin systems, the only post-installation
configuration required is updating the path environment
variable to include the location of ESP-r binaries. 


Updating your PATH
------------------
You'll need to update your PATH environment variable to
include the location of your ESP-r binaries. The steps
required to configure your path depend on the shell in
use on your system. Enter the command:

  $ echo $SHELL

Configuration of the PATH environment variable using the
bash and csh shells are described below. Information on
setting environment variables for other shell types (eg.
sh, zsh, ksh) is available on the Internet.

  BASH:

      Append the following line to your .bashrc file in
      your home directory (or in the system's .bashrc file)

      export PATH="<path/to/esp-r>/esp-r/bin/:$PATH"

      (Where <path/to/esp-r> describes the location
      in which you installed ESP-r)

  CSH:

      Append the following line to your .cshrc file in
      your home directory (or in the system's .cshrc file):

      set path = ( <path/to/esp-r>/esp-r/bin/ $path )

      (Where <path/to/esp-r> describes the location
      in which you installed ESP-r)


Setting EFONTS environment variable
-----------------------------------
On most Linux and Cygwin systems, acceptable fonts are
located automatically at runtime. However, if you find
ESP-r crashes after invocation, you may need to set the
EFONTS environment variable. Include the following lines
in your .bashrc /.cshrc file

   setenv EFONT_0 6x12
   setenv EFONT_1 6x13
   setenv EFONT_2 8x13
   setenv EFONT_3 9x15

Default settings
----------------
The file <path/to/esp-r>/esp-r/default defines the default
settings for example problems, climate, control, etc. These
can be changed if the default settings offered in the
standard distribution are not appropriate for your site.

Colour Map
----------
To run ESP-r on some Sun workstations it may be necessary
to firstly define the default colour map.  This can be
done by issuing the command "xstdcmap -default" or placing
it in your .xinitrc or .openwin-init file.  With Solaris 7
you will also need to add "xstdcmap -delete all" to your
.xinitrc file.  If you are running OpenWindows and colour
problems persist, try commenting out the line

      cmap_alloc -allscreens

in the file /usr/openwin/lib/openwin-sys.


===========================================================
8. DOCUMENTATION

An extensive collection of books, academic theses,
peer-reviewed papers, reports and manuals describing the
theoretical basis and application of ESP-r are available.
A complete list of ESP-r documentation can be found on the
ESRU website:

   http://www.esru.strath.ac.uk/publications.htm

Theoretical basis
-----------------
  
  - "Energy Simulation in Building Design" by Joe Clark
    (Butterworth Heinemann 2001) provides a broad
    description of ESP-r methodologies.

Application of ESP-r
--------------------

  - "The ESP-r Cookbook"  describes the application of
    ESP-r in building simulation:
       
       ftp://ftp.strath.ac.uk/Esru_public/documents/esp-r_cookbook.pdf

  - "Data model summary ESP-r Version 9 Series" describes
    the  format of ESP-r's input files:

       ftp://ftp.strath.ac.uk/Esru_public/documents/ESP-r_data_doc.pdf

Developing with ESP-r
---------------------

  - "Structure of the ESP-r Source Code Archive"
    outlines the branch structure in use on ESP-r
    central, and procedures for merging code:

       ftp://ftp.strath.ac.uk/Esru_public/documents/repository.pdf

  - "An overview of Subversion for ESP-r Central
    Users" summarizes the use of subversion to
    access and maintain branches on ESP-r Central:
       
       ftp://ftp.strath.ac.uk/Esru_public/documents/subversion.pdf

  - "ESP-r Coding Guide" provides guidelines for
    modifying ESP-r source code:

       ftp://ftp.strath.ac.uk/Esru_public/documents/coding_guide.pdf

  - "ESP-r Developers' Quality Assurance Checklist"
    prescribes testing procedures for contributers:

       ftp://ftp.strath.ac.uk/Esru_public/documents/QA_checklist.pdf

===========================================================
9. VALIDATION

Up to date description of validation studies and packaged
QA tools to go here.

   - IEA BESTEST / ASHRAE 140 references
   - CEN test suite
   - tester.pl 

===========================================================
10. QUALITY ASSURANCE AND RELEASE TESTING

Development of ESP-r continues, and its predictions are
subject to change as new features are added and existing
facilities improved. To guarantee the reliability of ESP-r
results, a quality assurance procedure is performed prior
to each release.

The quality assurance procedure is designed to assure
that no differences in ESP-r functionality or simulation
results are introduced between releases. If modifications
to ESP-r have caused differences in simulation results,
the release testing assures that the differences are 
attributable to the changes introduced by the developer, 
and not the result of an unintended bug.

The quality assurance procedure contains two principle
components:

  a) Regression testing, which compares the predictions
     from two successive versions of ESP-r and determines
     if differences exist in the results.

  b) Cross-platform testing, which compares the predictions
     from the most recent version of ESP-r running on
     different platforms and determines if differences
     exist in the results.

Since ESP-r is most commonly used on Linux systems and
has proven robust on this platform, regression testing is
performed on linux systems.  When possible, cross-platform
testing is performed using each of the other supported
platforms (Solaris, Cygwin, MinGW and OS X). However,
limited access to these platforms and the greater variety
of configurations exhibited by these systems limits the
amount of testing that can be performed, and ESP-r may
not install or function correctly on some machines.

The following table summarizes the most recent test results
on each of ESP-r's supported platforms:

  ======================================================================
  Platform  Last test date     Notes
  ---------------------------------------------------------------------
  Linux     2007-04-16 (r967)  A complete regression test was performed
            2007-03-28 (r922)  against last release (2006-11-11, r653).
                               All differences are expected as introduced
                               in r665 and r904.
  ---------------------------------------------------------------------
  Solaris   2007-03-29 (r922)  A cross platform test was performed
                               comparing Solaris output to linux results.
                               Trivial numerical differences were
                               observed in all test cases, while some
                               non-trivial numerical differences were
                               observed in in the temperatures of
                               exterior surfaces in some test cases.
  ---------------------------------------------------------------------
  Cygwin    2007-04-04 (r922)  A cross platform test was performed
                               comparing Cygwin output to linux
                               results on r922. This test identified
                               a problem with one test case in basesimp.
                               The problem was addressed with r967.
                               Since no source code changes between r922
                               and r967, the complete cross platform test
                               was not carried out for r967.
  ---------------------------------------------------------------------
  MinGW     -----              The cross platform test between Linux
                               and MinGW was not undertaken.
  ---------------------------------------------------------------------
  OS X      -----              No comprehensive comparison between
                               Linux and OSX results has been 
                               undertaken.
  ======================================================================

===========================================================
11. SUPPORT

The quickest route to a remedy for an ESP-r installation or
modelling problem is to ask for help on the ESP-r mailing
list. To subscribe to the list, visit:

  http://lists.strath.ac.uk/mailman/listinfo/esp-r

Good Luck!

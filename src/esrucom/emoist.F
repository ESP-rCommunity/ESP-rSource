C This file is part of the ESP-r system.
C Copyright Energy Systems Research Unit, University of
C Strathclyde, Glasgow Scotland, 2001.

C ESP-r is free software.  You can redistribute it and/or
C modify it under the terms of the GNU General Public
C License as published by the Free Software Foundation 
C (version 2 orlater).

C ESP-r is distributed in the hope that it will be useful
C but WITHOUT ANY WARRANTY; without even the implied
C warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
C PURPOSE. See the GNU General Public License for more
C details.

C You should have received a copy of the GNU General Public
C License along with ESP-r. If not, write to the Free
C Software Foundation, Inc., 59 Temple Place, Suite 330,
C Boston, MA 02111-1307 USA.

C *********************************************************************
C EMSTRR reads a zone moisture data file.
C *********************************************************************
      SUBROUTINE EMSTRR(LMSTR,IUNIT,ICOMP,ITRC,ITRU,IER)
#include "building.h"

C espriou.h provides current file.
#include "espriou.h"

      COMMON/OUTIN/IUOUT,IUIN
      COMMON/PREC9/NCONST(MCOM),NELTS(MCOM,MS),NGAPS(MCOM,MS),
     &             NPGAP(MCOM,MS,MGP)
      COMMON/MOIST03/MNDS,MNDZ(MCOM),MNDC(MCOM,MS),MNDL(MCOM,MS,ME)
      COMMON/MOIST05/IPERM(MCOM,MS,ME),PERM(MCOM,MS,ME,3)
      COMMON/MOIST06/ISORP(MCOM,MS,ME),SORP(MCOM,MS,ME,3)
      COMMON/MOIST07/ITVAPD(MCOM,MS,ME),TVAPD(MCOM,MS,ME)

      CHARACTER LMSTR*72,OUTSTR*124,outs*124
      IER=0

C Open existing ASCII moisture data file as unit IUNIT.
      CALL EFOPSEQ(IUNIT,LMSTR,1,IER)
      IF(IER.LT.0)THEN
        IER=1
        RETURN
      ENDIF
      write(currentfile,'(a)') LMSTR(1:lnblnk(LMSTR))

C Read the moisture node distribution information.
      MNDS=MNDS-MNDZ(ICOMP)
      MNDZ(ICOMP)=0
      NC=NCONST(ICOMP)
      DO 10 I=1,NC
        NE=NELTS(ICOMP,I)
        CALL STRIPC(IUNIT,OUTSTR,NE,ND,1,'moist nodes/layer',IER)
        IF(IER.NE.0)goto 101
        K=0
        MNDC(ICOMP,I)=1
        DO 20 IL=1,NE
          CALL EGETWI(OUTSTR,K,NM,2,MNM-1,'F','nodes',IER)
          IF(IER.NE.0)goto 101
          MNDL(ICOMP,I,IL)=NM
          MNDC(ICOMP,I)=MNDC(ICOMP,I)+NM
   20   CONTINUE
        MNDZ(ICOMP)=MNDZ(ICOMP)+MNDC(ICOMP,I)
   10 CONTINUE
      MNDS=MNDS+MNDZ(ICOMP)

C Read the data for water vapour permeability for each layer.
      DO 30 I=1,NC
        NE=NELTS(ICOMP,I)
      DO 30 IL=1,NE
        CALL STRIPC(IUNIT,OUTSTR,99,ND,1,'data',IER)
        IF(IER.NE.0)goto 101
        K=0
        CALL EGETWI(OUTSTR,K,INDX,1,1,'F','IPERM index',IER)
        IPERM(ICOMP,I,IL)=INDX
        IF(IER.NE.0)goto 101
        IF(INDX.EQ.1.AND.ND.EQ.4)THEN
          DO 40 IP=1,3
            CALL EGETWR(OUTSTR,K,DATA,0.,1.,'-','PERM() data',IER)
            IF(IER.NE.0)goto 101
            PERM(ICOMP,I,IL,IP)=DATA
   40     CONTINUE
        ELSE
          CALL USRMSG(' ','Un-known index','W')
          RETURN
        ENDIF
   30 CONTINUE

C Read the data for moisture capacity for each layer.
      DO 50 I=1,NC
        NE=NELTS(ICOMP,I)
      DO 50 IL=1,NE
        CALL STRIPC(IUNIT,OUTSTR,99,ND,1,'data',IER)
        IF(IER.NE.0)goto 101
        K=0
        CALL EGETWI(OUTSTR,K,INDX,1,1,'F','ISORP()index',IER)
        ISORP(ICOMP,I,IL)=INDX
        IF(IER.NE.0)goto 101
        IF(INDX.EQ.1.AND.ND.EQ.4)THEN
          DO 60 IP=1,3
            CALL EGETWR(OUTSTR,K,DATA,0.,1.,'-','SORP() data',IER)
            IF(IER.NE.0)goto 101
            SORP(ICOMP,I,IL,IP)=DATA
   60     CONTINUE
        ELSE
          CALL USRMSG(' ','Un-known moisture index','W')
          RETURN
        ENDIF
   50 CONTINUE

C Read thermal vapor diffusion coefficient for each layer.
      DO 70 I=1,NC
        NE=NELTS(ICOMP,I)
      DO 70 IL=1,NE
        CALL STRIPC(IUNIT,OUTSTR,99,ND,1,'data',IER)
        IF(IER.NE.0)RETURN
        K=0
        CALL EGETWI(OUTSTR,K,INDX,1,1,'F','index',IER)
        ITVAPD(ICOMP,I,IL)=INDX
        IF(IER.NE.0)RETURN
        IF(INDX.EQ.1.AND.ND.EQ.2)THEN
          CALL EGETWR(OUTSTR,K,DATA,0.,1.,'-','data',IER)
          IF(IER.NE.0)RETURN
          TVAPD(ICOMP,I,IL)=DATA
        ELSE
          CALL USRMSG(' ','Un-known index','W')
          RETURN
        ENDIF
   70 CONTINUE

c Close zone moisture data file.
      CALL ERPFREE(IUNIT,ISTAT)

c Trace output ?
      IF(ITRC.GE.1)THEN
        CALL EDISP(ITRU,'zone moisture data file successfully read.')
      ENDIF
      RETURN

 101  write(outs,'(3a)') 'EMSTRR: error reading ',OUTSTR(1:50),'...'
      call edisp(iuout,outs)
      ier=1
      CALL ERPFREE(IUNIT,ISTAT)
      return
      END

C *********************************************************************
C EMSTRW writes a zone moisture data file.
C *********************************************************************
      SUBROUTINE EMSTRW(LMSTR,IUNIT,ICOMP,ITRC,ITRU,IER)
#include "building.h"

      COMMON/OUTIN/IUOUT,IUIN
      COMMON/PREC9/NCONST(MCOM),NELTS(MCOM,MS),NGAPS(MCOM,MS),
     &             NPGAP(MCOM,MS,MGP)
      COMMON/MOIST03/MNDS,MNDZ(MCOM),MNDC(MCOM,MS),MNDL(MCOM,MS,ME)
      COMMON/MOIST05/IPERM(MCOM,MS,ME),PERM(MCOM,MS,ME,3)
      COMMON/MOIST06/ISORP(MCOM,MS,ME),SORP(MCOM,MS,ME,3)
      COMMON/MOIST07/ITVAPD(MCOM,MS,ME),TVAPD(MCOM,MS,ME)

      CHARACTER LMSTR*72
      IER=0

C Open ASCII moisture data file as unit IUNIT.
      CALL EFOPSEQ(IUNIT,LMSTR,4,IER)
      IF(IER.LT.0)THEN
        IER=1
        RETURN
      ENDIF

C Write the moisture node distribution information.
      WRITE(IUNIT,'(A)')'#  moisture nodes/layer'
      NC=NCONST(ICOMP)
      DO 10 I=1,NC
        NE=NELTS(ICOMP,I)
        WRITE(IUNIT,'(8I6)')(MNDL(ICOMP,I,IL),IL=1,NE)
   10 CONTINUE

C Write the data for water vapor permeability for each layer.
      WRITE(IUNIT,'(A)')'# Vapour permeability data for each layer'
      DO 30 I=1,NC
        WRITE(IUNIT,'(A,I3)')'# indx |   associated data for surface',I
        NE=NELTS(ICOMP,I)
      DO 30 IL=1,NE
        IN=1
        D1=PERM(ICOMP,I,IL,1)
        D2=PERM(ICOMP,I,IL,2)
        D3=PERM(ICOMP,I,IL,3)
        WRITE(IUNIT,'(3X,I2,6X,3G10.3)')IN,D1,D2,D3
   30 CONTINUE

C Write the data for moisture capacity for each layer.
      WRITE(IUNIT,'(A)')'# Sorption isotherm data for each layer'
      DO 40 I=1,NC
        WRITE(IUNIT,'(A,I3)')'# indx |   associated data for surface',I
        NE=NELTS(ICOMP,I)
      DO 40 IL=1,NE
        IN=1
        D1=SORP(ICOMP,I,IL,1)
        D2=SORP(ICOMP,I,IL,2)
        D3=SORP(ICOMP,I,IL,3)
        WRITE(IUNIT,'(3X,I2,6X,3G10.3)')IN,D1,D2,D3
   40 CONTINUE

C Write the thermal vapor diffusion coefficient for each layer.
      WRITE(IUNIT,'(2A)')'# Thermal vapour diffusion coefficient',
     &                   ' for each layer'
      DO 50 I=1,NC
        WRITE(IUNIT,'(A,I3)')'# indx |   associated data for surface',I
        NE=NELTS(ICOMP,I)
      DO 50 IL=1,NE
        IN=1
        WRITE(IUNIT,'(3X,I2,6X,G10.3)')IN,TVAPD(ICOMP,I,IL)
   50 CONTINUE

c Close zone moisture data file.
      CALL ERPFREE(IUNIT,ISTAT)

c Trace output ?
      IF(ITRC.GE.1)THEN
        CALL EDISP(ITRU,'zone moisture data file successfully saved.')
      ENDIF
      RETURN
      END

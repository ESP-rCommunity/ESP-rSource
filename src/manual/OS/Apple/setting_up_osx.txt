             Setting OSX 10.6, 10.7,10.8 for ESP-r
                      Jon W. Hand, ESRU
                       30 May 2013

INTRODUCTION

Apple computers can run ESP-r and are also great computers for
doing development work on ESP-r. OSX includes the scripting,
security and multi-tasking features of Linux/Unix computers
which ESP-r requires. For development work the compiler 'tool-chain' 
is almost identical to that on Linux (GCC and Make).

There are several tasks that are required before you can embark
on creating or using the virtual physics of ESP-r. If you are
setting up a new OSX machine with 10.6 take the opportunity to 
customise the initial install. Go back to the DVD and use the XCode 
installer. For 10.7 there is no DVD - use the Apple Store to
get the free XCode development environment as well as its command 
line utilities.  There are also notes for OSX 10.8 at the end of
this document.

You will also need some additional libraries and development header 
files that are most easily setup via the Fink (and optionally Fink 
Commander) environment or the MacPorts environment. These are 
discussed in subsequent sections.

Apple's X11 environment comes in two parts: the first includes
the X11 library, fonts, Xserver etc. which are part of the
OSX general install process (look for X11 in the Applicatins ->
Utilities folder), the second includes the `include` folders and 
C header files needed to compile and link with X11 which is
part of Xcode.

The OSX 10.6 developer kit XCode be used to compile 32 bit or 64 
bit executables of ESP-r. The Apple X11 libraries and headers are
32 bit whereas the alternative GTK interface for ESP-r are 64 bit
and thus it is necessary to use an alternative Install script
(look for Install_osx_64_â€¦ in the bin folder of the ESP-r 
distribution) which uses an -m64 directive to get GTK working. 

OSX 10.7 and later are pure 64 bit environments and therefore both 
the X11 and GTK ESP-r interfaces will need to be compiled as 64 bit.
With OSX 10.7 the Xcode command line utilities are a separate install
(see notes at end of document).

Gfortran tends not to be included in the XCode release and needs
to be sourced elsewhere (see links below).  


FONTS

On OSX sometimes the GTK version of ESP-r will crash when attempting 
to display a pop-up message or display such as the wire-frame control 
proforma. This is usually resolved by re-freshing the font cache via 
the following command:
  sudo fc-cache -f -v

It might take several minutes to do this refresh of the font cache.

FINK

Fink is a development environment for Open source software on
OSX (see useful links). It holds information about several 
thousand packages and knows how to download source and then 
compile open source software. 

Fink is used to set up the tools, helper applications and 
compilers which ESP-r uses. Fink knows about many of the 
dependencies in the packages that you request and will take 
away many of the hassles of manually fetching dependencies.

Here is a list of some of the packages which are required and or
which are useful and which fink can acquire and/or build:
  cctools (unsure if required for developer)
  cups-dev (optional printing drivers)
  ddd (useful) debugging environment
  enscript (useful) generates postscript version of a text file
  flex (probably required) lexical analyser
  gfortran GNU fortran compiler (if not already installed)
  gawk (useful) GNU edition of Awk processing language
  ghostscript (useful) postscript document creation environment
  gimp2-dev (useful if compiling GTK version of ESP-r to get libraries
     and header files
  glib2 (probably required) library of utility functions
  gzip (required) compression tool
  imagemagick (useful) image capture/conversion/display and to get
    many commonly required library and header files
  lesstif (optional) implementation of Motif graphic libary
  libPNG (optional) image format library
  libtiff (optional) image format library
  m4 (required) macro language
  nedit or medit (useful) text editor which works well with esp-r files
  system-xfree86 (required) placeholder for Apple X11
  tar (useful) for archiving and unarchiving esp-r models
  transfig (useful) for handling xfig files (can be generated by 
    results module)
  xfig (useful) vector drawing/graphing tool (can be generated by 
    results module)
  
Most of the items above which are noted as required will be installed 
with the initial fink installation.  Fink will place new software in 
the folders under /sw.

A typical command to install a package (such as ddd) is (in a command
terminal):
  fink install ddd

To find out what has already been installed by fink use:
  fink list --installed
  
To find out what packages are available use:
  fink list

(an i before the item says it has been installed and a p before the
item signals that it is a virtual package.

MACPORTS

The MacPorts environment (see useful links) is designed to assist
OSX users in installing open source software. It is possible to
find the GCC compiler collections (gcc g++ gfortran) for OSX 10.6
10.7 and 10.8. MacPorts will place newly installed software
in /opt/local (so that they do not clash with other software).
MacPorts package manages dependencies so the hassles of acquiring 
related software packages and/or libraries are reduced. With very
few commands the dependencies needed for ESP-r development and use
can be installed on your computer.

MacPorts command syntax is a variant of the Fink syntax. Go to the
folder /opt/local.  To see if a port exists use commands in the form:

  sudo bin/port search gcc

And to install a package and its dependencies issue commands in the form:
  sudo bin/port install gcc46

which will install g++-mp-4.6, gcc-mp-4.6 and gfortran-mp-4.6 in /opt/local/bin

You will want to install the following port packages along with their
dependencies:
gcc46, ddd and gimp2-devel

This combination of ports will result in X11 and GTK libraries being located
in /opt/local/lib in addition to the X11 libraries generated by the initial
X11 install in /usr/X11R6.

The pure-text version needs none of the graphic libraries and will almost
always compile. The GTK version uses a utility called pkg-config to locate
libraries and will compile with few questions being asked. In OSX 10.7 the 
libraries needed for an X11 interface may not be found in the standard 
location for a 64bit computer and you may have to manually specify the 
location.


COMPILING

By default OS X will place user accounts under the folder /Users.
The default location for ESP-r on Linux tends to be either
/usr/esru or /opt/esru. When compiling experimental versions of ESP-r
you will need to adapt the Install command line options to direct it to 
install the ESP-r distribution to a folder which you control such 
as /Users/fred/esru. To create a /usr/esru or /opt/esru folder you 
may need to use a sudo command to create the new folder and to gain 
ownership of the new folder so that you can install ESP-r there.

When compiling esp-r use Install script in the ESP-r source code
distribution. A typical command would be:

 ./Install -d /opt/esru --gcc4 --reuse_ish_calcs --debug

If you are using the MacPorts GCC tool chain you need to include
the --compiler_version directive

 ./Install -d /opt/esru --gcc4 --compiler_version -mp-4.6 --reuse_ish_calcs --debug

The Install script will also ask questions about debug (say yes) and 
databases and example models (say yes the first time as well as when
there have been changes to ESP-r databases and example models).

If you give the command ./Install --help a list of command line 
options will be shown.


RADIANCE

The Radiance visual simulation suite R3.9 or R4.1 compiles ok on OSX 10.6
or 10.7.  You also need to create a link named genrbox pointing
at genbox in /usr/local/bin (the typical location where Radiance is
compiled to). Normally it is not necessary to set the RAYPATH environment
variable if the Radiance library files are in /usr/local/lib/ray.


USEFUL LINKS

The newest compilers for OSX are not found in the XCode environment but in
external locations.  Here is a list of useful sites:

The HPC Mac OSX site (high performance computing) http://hpc.sourceforge.net
which currently offers GCC 4.6 for OSX 10.5 and 10.6  The GCC compilers
are installed in /usr/local  These compilers seem to be an improvement
over the default GCC that comes with the XCode install.  The MacPorts
GCC 4.6 works well in OSX 10.7 and 10.8.

There are a number of data analysis tools linked on the Macs in Chemistry
site <http://www.macinchem.org/> site.

MacPorts site (http://www.macports.org) 

The Fink project site (http://www.finkproject.org/).


DEPENDENCIES

There are two versions of ESP-r which can be installed. The so-called
X11 version which uses the X11 graphics libraries and the GTK version 
which is based on the GTK+ graphics libraries. There are a few functions 
which are not available in the GTK version (e.g. click-on-bitmap). And 
ESP-r can also be invoked on the command line to run in a pure-text mode 
and there is an option to compile a version of ESP-r which is text based 
and has no dependencies on the X11 or GTK libraries.

ESP-r has a number of library dependencies for the X11 and GTK versions.
If you have all of the libraries that you need then the various modules 
of the ESP-r suite will run. If not all of them exist then you will get 
an error message with the name of the library or libraries that have not 
been found. 

If you are running the X11 version of esp-r there are only a few 
libraries that the executables will be looking for (the version 
numbers may be different on your machine):

otool -L ./clm
./clm:
    /usr/X11/lib/libX11.6.dylib (compatibility version 9.0.0, current version 9.0.0)
    /usr/local/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.10.0)
    /usr/lib/libxslt.1.dylib (compatibility version 3.0.0, current version 3.12.0)
    /usr/lib/libxml2.2.dylib (compatibility version 9.0.0, current version 9.16.0)
    /usr/local/lib/libgfortran.3.dylib (compatibility version 4.0.0, current version 4.0.0)
    /usr/local/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1.0.0)
    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 111.1.5)

These libraries will typically be installed with the X11 environment 
on Apple computers.

If you are using the GTK version of ESP-r then there are additional
libraries that are required. Many of these tend to be located in a /sw folder
structure which is maintained by the 'fink' development packages or
in /opt/lib if you are using MacPorts. 

% otool -L ./clm
./clm:
    /sw/lib/libgtk-x11-2.0.0.dylib (compatibility version 401.0.0, current version 401.9.0)
    /sw/lib/libgdk-x11-2.0.0.dylib (compatibility version 401.0.0, current version 401.9.0)
    /usr/X11R6/lib/libXrandr.2.dylib (compatibility version 2.0.0, current version 2.0.0)
    /usr/X11R6/lib/libXinerama.1.dylib (compatibility version 1.0.0, current version 1.0.0)
    /usr/X11R6/lib/libXext.6.dylib (compatibility version 6.4.0, current version 6.4.0)
    /usr/X11R6/lib/libXft.2.dylib (compatibility version 2.1.0, current version 2.1.0)
    /usr/X11R6/lib/libfreetype.6.dylib (compatibility version 6.3.0, current version 6.3.0)
    /usr/X11R6/lib/libXrender.1.dylib (compatibility version 1.2.0, current version 1.2.0)
    /usr/X11R6/lib/libfontconfig.1.dylib (compatibility version 1.0.0, current version 1.0.0)
    /usr/X11R6/lib/libX11.6.dylib (compatibility version 6.2.0, current version 6.2.0)
    /usr/X11R6/lib/libXcursor.1.dylib (compatibility version 1.0.0, current version 1.0.0)
    /sw/lib/libatk-1.0.0.dylib (compatibility version 601.0.0, current version 601.1.0)
    /sw/lib/libgdk_pixbuf-2.0.0.dylib (compatibility version 401.0.0, current version 401.9.0)
    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 88.1.11)
    /sw/lib/libpangoxft-1.0.0.dylib (compatibility version 601.0.0, current version 601.0.0)
    /sw/lib/libpangox-1.0.0.dylib (compatibility version 601.0.0, current version 601.0.0)
    /sw/lib/libpango-1.0.0.dylib (compatibility version 601.0.0, current version 601.0.0)
    /sw/lib/libgobject-2.0.0.dylib (compatibility version 601.0.0, current version 601.6.0)
    /sw/lib/libgmodule-2.0.0.dylib (compatibility version 601.0.0, current version 601.6.0)
    /sw/lib/libglib-2.0.0.dylib (compatibility version 601.0.0, current version 601.6.0)
    /sw/lib/libintl.1.dylib (compatibility version 2.0.0, current version 2.1.0)
    /sw/lib/libiconv.2.dylib (compatibility version 6.0.0, current version 6.0.0)
    /usr/lib/libmx.A.dylib (compatibility version 1.0.0, current version 93.0.0)


10.7 & 10.8 Additional notes:

The 10.7 developer kit XCode (V4.4.3.3) is only available via the Apple App Store and
comes with GCC. The command line tools needed for compiling ESP-r are an additional
install which is accessed via the Xcode -> Open developer tool -> More developer tools
options. With OSX 10.8 the X11 server is not longer included as a standard
install, you are directed to use XQuartz <xquartz.macosforge.org> with a Wiki at
<xquartz.macosforge.org/trac/wiki>.


